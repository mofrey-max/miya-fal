{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","node_modules/@ionic/core/dist/esm/index-729ec402.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","src/app/pages/services/dataservice.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","\nimport { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { Router, RouterEvent } from '@angular/router';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface Dev {\n  id: number,\n  name: string,\n  skills: any[],\n  img: string\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private database: SQLiteObject;\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  developers = new BehaviorSubject([]);\n  products = new BehaviorSubject([]);\n\n  \n  selectedPath = '';\n\n  constructor(  private plt: Platform, private router: Router, private sqlitePorter: SQLitePorter, private sqlite: SQLite,\n     private http: HttpClient) {\n\n    this.plt.ready().then(() => {\n      this.sqlite.create({\n        name: 'developers.db',\n        location: 'default'\n      })\n      .then((db: SQLiteObject) => {\n          this.database = db;\n          this.customDatabase();\n      });\n    });\n\n   \n\n  /* filterItems(searchTerm) {\n    return this.items.filter(item => {\n      return item.id.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1 ||\n      item.title.toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;\n    });\n  } */\n  }\n\n  customDatabase() {\n    this.http.get('assets/custom.sql', { responseType: 'text'})\n    .subscribe(sql => {\n      this.sqlitePorter.importSqlToDb(this.database, sql)\n        .then(_ => {\n          this.loadDevelopers();\n          this.loadProducts();\n          this.dbReady.next(true);\n        })\n        .catch(e => console.error(e));\n    });\n  }\n\n  getDatabaseState() {\n    return this.dbReady.asObservable();\n  }\n \n  getDevs(): Observable<Dev[]> {\n    return this.developers.asObservable();\n  }\n \n  getProducts(): Observable<any[]> {\n    return this.products.asObservable();\n  }\n\n  loadDevelopers() {\n    return this.database.executeSql('SELECT * FROM developer', []).then(data => {\n      let developers: Dev[] = [];\n \n      if (data.rows.length > 0) {\n        for (var i = 0; i < data.rows.length; i++) {\n          let skills = [];\n          if (data.rows.item(i).skills != '') {\n            skills = JSON.parse(data.rows.item(i).skills);\n          }\n \n          developers.push({ \n            id: data.rows.item(i).id,\n            name: data.rows.item(i).name, \n            skills: skills, \n            img: data.rows.item(i).img\n           });\n        }\n      }\n      this.developers.next(developers);\n    });\n  }\n\n  addDeveloper(name, skills, img) {\n    let data = [name, JSON.stringify(skills), img];\n    return this.database.executeSql('INSERT INTO developer (name, skills, img) VALUES (?, ?, ?)', data).then(data => {\n      this.loadDevelopers();\n    });\n  }\n \n  getDeveloper(id): Promise<Dev> {\n    return this.database.executeSql('SELECT * FROM developer WHERE id = ?', [id]).then(data => {\n      let skills = [];\n      if (data.rows.item(0).skills != '') {\n        skills = JSON.parse(data.rows.item(0).skills);\n      }\n \n      return {\n        id: data.rows.item(0).id,\n        name: data.rows.item(0).name, \n        skills: skills, \n        img: data.rows.item(0).img\n      }\n    });\n  }\n\n  deleteDeveloper(id) {\n    return this.database.executeSql('DELETE FROM developer WHERE id = ?', [id]).then(_ => {\n      this.loadDevelopers();\n      this.loadProducts();\n    });\n  }\n \n  updateDeveloper(dev: Dev) {\n    let data = [dev.name, JSON.stringify(dev.skills), dev.img];\n    return this.database.executeSql(`UPDATE developer SET name = ?, skills = ?, img = ? WHERE id = ${dev.id}`, data).then(data => {\n      this.loadDevelopers();\n    })\n  }\n \n  loadProducts() {\n    let query = 'SELECT product.name, product.id, developer.name AS creator FROM product JOIN developer ON developer.id = product.creatorId';\n    return this.database.executeSql(query, []).then(data => {\n      let products = [];\n      if (data.rows.length > 0) {\n        for (var i = 0; i < data.rows.length; i++) {\n          products.push({ \n            name: data.rows.item(i).name,\n            id: data.rows.item(i).id,\n            creator: data.rows.item(i).creator,\n           });\n        }\n      }\n      this.products.next(products);\n    });\n  }\n\n  addProduct(name, creator) {\n    let data = [name, creator];\n    return this.database.executeSql('INSERT INTO product (name, creatorId) VALUES (?, ?)', data).then(data => {\n      this.loadProducts();\n    });\n  }\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}